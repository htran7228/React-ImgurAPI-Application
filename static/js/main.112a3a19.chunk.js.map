{"version":3,"sources":["components/Album/album.js","components/Gallery/gallery.js","components/searchbar/searchbar.js","components/searchbar/search.js","Axc/Axu.js","Navigation/Navs.js","App.js","serviceWorker.js","index.js"],"names":["Request","state","client_id","album_id","information","prevInfo","fetchAPI","axios","method","url","_this","headers","authorization","then","response","x","JSON","parse","stringify","data","console","log","Object","toConsumableArray","setState","catch","error","checkDescription","descri","this","setTimeout","react_default","a","createElement","className","map","item","key","src","link","width","height","alt","href","title","description","Component","Gallery","section","sort","window","requestGalleryAPI","_this2","onClick","call","comment_count","score","downs","searchbar","props","type","placeholder","onChange","change","Search","searchString","search","searchGallery","event","newString","target","value","toString","toLowerCase","fetchSearchGallery","components_searchbar_searchbar","bind","axu","children","navs","Axu","htmlFor","id","NavLink","to","App","HashRouter","Navs","Switch","Route","exact","path","component","Album","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.112a3a19.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../componentstyle.css';\r\n\r\nclass Request extends Component {\r\n\r\n\r\nstate = {\r\n            client_id: 'c83aab06ee186e7',\r\n            album_id: 'V5Qiy29',\r\n            information: [], \r\n            prevInfo: []\r\n            \r\n       };\r\n\r\n   \r\nfetchAPI = () => {\r\n\r\n    axios({\r\n        method: 'get',\r\n        url: 'https://api.imgur.com/3/album/' + this.state.album_id + '/images' ,\r\n        headers: { 'authorization': 'Client-ID ' + this.state.client_id  }\r\n    }).then((response) => {\r\n        \r\n        //let item = JSON.parse(response.data.data)\r\n        \r\n        var x =JSON.parse(JSON.stringify(response.data.data));\r\n        console.log(response);\r\n        let data = [...x];\r\n      \r\n        this.setState({\r\n\r\n            information: data,\r\n            prevInfo: data\r\n        \r\n        })\r\n\r\n    }).catch((error) => {\r\n\r\n        console.log(error);\r\n\r\n    \r\n    });\r\n\r\n}\r\n\r\ncheckDescription = (descri) => {\r\n\r\n    if(descri !== null) {\r\n\r\n        return descri\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n//will set state\r\ncomponentDidMount() {\r\n    \r\n    this.fetchAPI();\r\n   \r\n\r\n};\r\n\r\ncomponentDidUpdate() {\r\n   \r\n    setTimeout(this.fetchAPI,5000);\r\n   \r\n    \r\n}\r\n\r\nrender() {\r\n\r\n     console.log(this.state.information);\r\n\r\n            return (\r\n                <div className=\"request\">\r\n                    <h1>Album Images from Imgur</h1>\r\n                    {this.state.information.map((item,key) => {\r\n                    \r\n                            return (\r\n                            <div className=\"img-container\" key={key}>\r\n                                <img src={item.link} width=\"500\" height=\"500\" alt=\"Pictures from user album\"></img>\r\n                                <h3><a href={item.link}>{item.title}</a></h3>  \r\n                                <p>{item.description}</p>                                               \r\n                            </div> \r\n                            )\r\n                     })}\r\n                 </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Request;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../componentstyle.css';\r\n\r\n\r\nclass Gallery extends Component {\r\n\r\n    state = {\r\n        client_id: 'c83aab06ee186e7',\r\n        information: [], \r\n        prevInfo: [], //In case comparsion is ever needed. Not currently in use.\r\n        section: \"top\",\r\n        sort: \"top\",\r\n        window: \"\"\r\n\r\n        \r\n   };\r\n\r\n    requestGalleryAPI = () => {\r\n     \r\n    axios({  \r\n        method: 'get',\r\n        url: 'https://api.imgur.com/3/gallery/' + this.state.section  + '/' +  this.state.sort + '/' + this.state.window + '/1?showViral=true&mature=false&album_previews=true' ,\r\n        headers: { 'authorization': 'Client-ID ' + this.state.client_id  }\r\n    }).then((response) => {\r\n        \r\n        //let item = JSON.parse(response.data.data)   \r\n        var x =JSON.parse(JSON.stringify(response.data.data));       \r\n        let data = [...x];\r\n        //console.log(data);\r\n\r\n        this.setState({\r\n\r\n            information: data,\r\n            prevInfo: data\r\n        \r\n        })\r\n\r\n    }).catch((error) => {\r\n\r\n        console.log(error);\r\n      \r\n    });\r\n\r\n    }\r\n \r\n    componentDidMount() {  //call API once page is rendered\r\n\r\n        this.requestGalleryAPI();\r\n\r\n    }\r\n\r\n/*\r\n   shouldComponentUpdate(nextState) {\r\n\r\n        return this.state.information !== nextState.information\r\n\r\n    }\r\n\r\n      componentDidUpdate() { //updates \r\n   \r\n        setTimeout(this.requestGalleryAPI ,1000);\r\n           \r\n    }\r\n\r\n*/\r\n  \r\n  \r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"request\">\r\n                 <h1>Gallery Images from Imgur</h1>\r\n                 <div className=\"sectionOption\">\r\n                     <li><button onClick={() => {this.setState({window:\"day\"}); this.requestGalleryAPI.call(this) }}>day</button></li>\r\n                     <li><button onClick={() => {this.setState({window:\"week\"}); this.requestGalleryAPI.call(this)}}>week</button></li>\r\n                     <li><button onClick={() => {this.setState({window:\"month\"}); this.requestGalleryAPI.call(this)}}>month</button></li>\r\n                     <li><button onClick={() => {this.setState({window:\"year\"}); this.requestGalleryAPI.call(this)}}>year</button></li>\r\n                 </div>\r\n                 {this.state.information.map((item,key) => {\r\n                    return (\r\n                        <div key={key} className=\"img-container\"  >\r\n                            <img  src={item.link} width=\"500\" height=\"500\" alt=\"\"></img>\r\n                            <h3><a href={item.link}>{item.title}</a></h3>\r\n                            <li><p> Comment Count: {item.comment_count}</p> </li>\r\n                           <li><p> Upvotes: {item.score}</p></li>\r\n                           <li> <p> Downvotes: {item.downs}</p></li>                    \r\n                        </div> \r\n                    )\r\n                 })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport './searchbar.css';\r\n\r\nconst searchbar = (props) => {\r\n\r\n\r\n        return (\r\n            <div className=\"search-box\">\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                <input type=\"text\" placeholder=\"Search Gallery\" className=\"searchTerm\" onChange={props.change} ></input>         \r\n           </div>\r\n       </div>\r\n            </div> \r\n\r\n        )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default searchbar;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './searchbar'; \r\nimport '../componentstyle.css';\r\nimport './searchbar.css';\r\n\r\n\r\nclass Search extends Component {\r\n\r\n        state = {\r\n            client_id: 'c83aab06ee186e7',\r\n            searchString: \"\",\r\n            search: []\r\n\r\n\r\n        }\r\n\r\n        searchGallery = (event) => {    \r\n            let str = event.target.value \r\n            let newString = str.toString().toLowerCase();\r\n              \r\n            this.setState({\r\n                searchString: newString ,\r\n            });\r\n            this.fetchSearchGallery();\r\n            //console.log(str);\r\n\r\n        }\r\n\r\n        fetchSearchGallery = () => {\r\n\r\n                axios({\r\n                    method: 'get',\r\n                    url: 'https://api.imgur.com/3/gallery/search/top/week/1?q_all=' + this.state.searchString  ,\r\n                    headers: { 'authorization': 'Client-ID ' + this.state.client_id  }\r\n                }).then((response) => {\r\n                    var x =JSON.parse(JSON.stringify(response.data.data));\r\n                    console.log(response.data.data);\r\n                    let data = [...x];\r\n                    this.setState({\r\n                        search: data\r\n                    })\r\n                }).catch((error) => {\r\n\r\n                    console.log(error);\r\n                }\r\n            )\r\n\r\n        }\r\n\r\n      \r\n        render() {\r\n            \r\n            return (\r\n\r\n                <div className=\"request\">\r\n                    <h1>Search Imgur Gallery</h1>\r\n                    <SearchBar\r\n                    change={this.searchGallery.bind(this)}\r\n                    />\r\n                    <div className=\"wrapper\">\r\n                     {this.state.search.map((item,key) => {\r\n                            return (  \r\n                                <div className=\"searchContainer\" key={key}>   \r\n                                    <h3><a href={item.link}>{item.title}</a></h3>  \r\n                                    <img src={item.link} width=\"300\" height=\"200\" alt=\"\"></img> \r\n                                    <li><p> Comment Count: {item.comment_count}</p> </li>\r\n                                     <li><p> Upvotes: {item.score}</p></li>\r\n                                     <li> <p> Downvotes: {item.downs}</p></li>                                                                                                 \r\n                                     </div> \r\n                             )\r\n                         })}  \r\n                    </div>        \r\n                 </div>\r\n            );\r\n\r\n        }\r\n      }\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst axu = (props) => props.children\r\n\r\n\r\nexport default axu;","import React from 'react';\r\nimport './navi.css';\r\nimport Aux from '../Axc/Axu.js';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst navs = () => {\r\n\r\n\r\n        return (\r\n        <Aux >\r\n        <div className=\"nav\">\r\n            <div className=\"nav-header\">\r\n            <div className=\"nav-title\">\r\n              HTran7228\r\n            </div>\r\n          </div>\r\n        <div className=\"nav-btn\">\r\n          <label htmlFor=\"nav-check\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          </label>\r\n        </div>\r\n          <input type=\"checkbox\" id=\"nav-check\"></input>  \r\n          <div className=\"nav-links\">\r\n          <NavLink to=\"/search\">Search Gallery</NavLink>\r\n            <NavLink to=\"/gallery\">Gallery</NavLink> \r\n            <NavLink to=\"/\">Album</NavLink>\r\n          </div>\r\n      </div>\r\n      </Aux >\r\n     );\r\n\r\n\r\n}\r\n\r\nexport default navs;","import React, { Component } from 'react';\nimport Album from './components/Album/album';\nimport Gallery from './components/Gallery/gallery';\nimport Search from './components/searchbar/search';\nimport Navs from './Navigation/Navs';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nclass App extends Component {\n\n\n\n  render() {\n    return (\n     <HashRouter>\n     <div className=\"App\">\n       <Navs/>\n       <Switch>\n       <Route exact path=\"/\" component={Album}/>\n       <Route path=\"/gallery\" component={Gallery}/>\n       <Route path=\"/search\" component={Search}/>\n       </Switch>\n       </div>\n     </HashRouter>\n    \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}